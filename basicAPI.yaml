openapi: 3.0.1
info:
  title: Basic API
  version: '1.0'
  description: Learning API at SEB Campus
  termsOfService: https://example.com/tos
  contact:
    email: contact@example.com
    name: Support
    url: https://example.com/contact
  license:
    name: License
    url: https://example.com/license
servers:
  - url: http://localhost:3000/
    variables: {}
    description: fake local server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: API Design and Development 2022-09-06
  - url: https://my-json-server.typicode.com/viktorsvasilonoks/API-20220906/db
    variables: {}
    description: My GIT Server
paths:
  /users:
    summary: user level operations
    description: fetch users, create new users
    get:
      summary: fetch users from server
      description: returns users from server
      operationId: fetchUsers
      responses:
        2XX:
          description: successful fetch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - users
    post:
      summary: create user
      description: sore user on server
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewUser'  
      responses:
        default:
          description: Default error sample response
      tags:
        - users
  /attempts:
    summary: attempts level operations
    description: fetch attempts, create new attempts
    get:
      summary: fetch attempts from server
      description: returns attempts from server
      operationId: fetchAttempts
      responses:
        2XX:
          description: successful fetch
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: x123
                  score:
                    type: integer
                    example: 55
                  userId:
                    type: string
                    example: abc123
        default:
          description: Default error sample response
      tags:
        - attempts
components:
  schemas:
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: bear
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
        - $ref: '#/components/schemas/PostNewUser'
        - type: object
          properties:
            id:
              type: string
              example: abc123
            username:
              type: string
              example: bear
            score:
              type: integer
              example: 55
            active:
              type: boolean
              example: true
